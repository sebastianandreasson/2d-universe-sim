[{"/Users/xandse/Documents/code/personal/2d-universe-sim/src/index.js":"1","/Users/xandse/Documents/code/personal/2d-universe-sim/src/App.js":"2","/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulator/build/index.js":"3","/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulator/build/index_bg.js":"4","/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulation.worker.js":"5","/Users/xandse/Documents/code/personal/2d-universe-sim/src/scripts/sky.js":"6"},{"size":1014,"mtime":1608072873364,"results":"7","hashOfConfig":"8"},{"size":4218,"mtime":1608296637015,"results":"9","hashOfConfig":"8"},{"size":17194,"mtime":1608071814336,"results":"10","hashOfConfig":"11"},{"size":9833,"mtime":1608070292230,"results":"12","hashOfConfig":"11"},{"size":524,"mtime":1607638145104,"results":"13","hashOfConfig":"8"},{"size":14137,"mtime":1607984078132,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},"1awfcpn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":2,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wf9rxv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/xandse/Documents/code/personal/2d-universe-sim/src/index.js",["33","34"],"import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nclass Root extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      canvas: null,\n      wasm: null,\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      let wasm = await import('./simulator/build')\n      console.log(wasm)\n      const universe = await wasm.Universe.new(\n        Math.floor(1920 / 15),\n        Math.floor(1080 / 15),\n        0\n      )\n      this.setState({\n        wasm,\n        universe,\n        canvas: document.getElementById('canvas'),\n      })\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  render() {\n    if (!this.state.wasm) {\n      return <div>Loading...</div>\n    }\n    const { wasm, canvas, universe } = this.state\n\n    return (\n      <App universe={universe} memory={wasm.wasm_memory()} canvas={canvas} />\n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n",["35","36"],"/Users/xandse/Documents/code/personal/2d-universe-sim/src/App.js",["37","38","39","40"],"import React, { useEffect, useState } from 'react'\nimport reglBuilder from 'regl'\nimport frag from './glsl/lit-element.glsl'\nimport vert from './glsl/vertex.glsl'\n/* eslint-disable import/no-webpack-loader-syntax */\nimport { startSky } from \"./scripts/sky\"\n// import SimulationWorker from 'worker-loader!./simulation.worker.js'\nimport * as Comlink from 'comlink'\n\n// let fragmentShader = require('./glsl/element.glsl')\n// let vertexShader = require('./glsl/vertex.glsl')\n\n// const webWorkers = [\n//   new SimulationWorker(),\n//   // new SimulationWorker(),\n// ]\n// let simulators = []\n\nconst start = ({ canvas, universe, memory }) => {\n  const regl = reglBuilder({\n    canvas,\n    attributes: { preserveDrawingBuffer: false },\n  })\n\n  const width = universe.width()\n  const height = universe.height()\n  let cell_pointer = universe.cells()\n  let light_pointer = universe.lights()\n  let cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4)\n  let lights = new Uint8Array(memory.buffer, light_pointer, width * height * 4)\n  const dataTexture = regl.texture({ width, height, data: cells })\n  const lightTexture = regl.texture({ width, height, data: lights })\n\n  const draw = regl({\n    blend: {\n      enable: true,\n      func: {\n        srcRGB: 'src alpha',\n        srcAlpha: 1,\n        dstRGB: 'one minus src alpha',\n        dstAlpha: 1,\n      },\n      equation: {\n        rgb: 'add',\n        alpha: 'add',\n      },\n      color: [0, 0, 0, 0],\n    },\n    frag,\n    vert,\n    uniforms: {\n      t: ({ tick }) => tick,\n      skyTime: () => (window.t ? window.t : 0),\n      dataTexture: () => {\n        cell_pointer = universe.cells()\n        cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4)\n        return dataTexture({ width, height, data: cells })\n      },\n      lightTexture: () => {\n        light_pointer = universe.lights()\n\n        lights = new Uint8Array(\n          memory.buffer,\n          light_pointer,\n          width * height * 4\n        )\n\n        return lightTexture({ width, height, data: lights })\n      },\n      resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight,\n      ],\n      dpi: 4,\n      // dpi: window.devicePixelRatio * 2,\n    },\n    attributes: {\n      position: [\n        [-1, 4],\n        [-1, -1],\n        [4, -1],\n      ],\n    },\n    count: 3,\n  })\n\n  return () => {\n    regl.poll()\n    draw()\n  }\n}\n\nlet t = 0\nlet sky;\ntry {\n  sky = startSky(1920 / (1920 / 12) * 2);\n} catch (e) {\n  console.error(e);\n  sky = {\n    frame: () => {}\n  };\n}\nconst App = ({ universe, memory, canvas }) => {\n  console.log({ universe, memory, canvas })\n  const [type, setType] = useState(2)\n\n  useEffect(() => {\n    const render = start({ universe, memory, canvas })\n\n    const loop = () => {\n      universe.tick()\n      var dayTime = (t / 50) % 255\n      t += 1\n\n      if (dayTime > 70 && dayTime < 170) {\n        t += 10\n      }\n      window.t = t\n      universe.set_time(dayTime)\n      render()\n      let skyTime = dayTime / 255;\n      window.skyTime = skyTime;\n      sky.frame(skyTime);\n\n      requestAnimationFrame(loop)\n    }\n\n    loop()\n    return () => {}\n  }, [])\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      console.log(event)\n      const width = universe.width()\n      const height = universe.height()\n      const boundingRect = canvas.getBoundingClientRect()\n\n      const scaleX =\n        canvas.width / Math.ceil(window.devicePixelRatio) / boundingRect.width\n      const scaleY =\n        canvas.height / Math.ceil(window.devicePixelRatio) / boundingRect.height\n\n      const canvasLeft = (event.clientX - boundingRect.left) * scaleX\n      const canvasTop = (event.clientY - boundingRect.top) * scaleY\n\n      const x = Math.min(Math.floor(canvasLeft), width - 1)\n      const y = Math.min(Math.floor(canvasTop), height - 1)\n\n      universe.paint(x, y, 20, type)\n    }\n\n    window.addEventListener('mousedown', handleClick)\n\n    return () => window.removeEventListener('mousedown', handleClick)\n  }, [type])\n\n  return (\n    <button\n      onClick={() => setType(type == 2 ? 0 : 2)}\n      style={{ position: 'absolute', right: 0, top: 0 }}\n    >\n      type {type}\n    </button>\n  )\n}\n\nexport default App\n","/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulator/build/index.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72"],"/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulator/build/index_bg.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"/Users/xandse/Documents/code/personal/2d-universe-sim/src/simulation.worker.js",["99"],"import * as Comlink from 'comlink'\n\nlet universe\nlet memory\nlet wasm\nlet index\nconst worker = {\n  init: async (payload) => {\n    import('./simulator/build').then(async (_wasm) => {\n      console.log('worker.init', payload.universe.ptr)\n      console.log('wasm', _wasm)\n      memory = _wasm.wasm_memory()\n      wasm = _wasm\n      console.log('mry', memory)\n      universe = memory.buffer[payload.universe.ptr]\n      console.log('uni', universe)\n    })\n  },\n  tick: () => wasm.tickUniverse(universe)\n}\n\n\nComlink.expose(worker)",["100","101"],"/Users/xandse/Documents/code/personal/2d-universe-sim/src/scripts/sky.js",["102","103","104","105"],"import fsh from '../glsl/sky.glsl'\nlet fragShader = fsh\n\n/*forked from https://github.com/bysse/shadertoy-webgl-harness*/\n// Mixed with some webgl2 code taken from pilibs.js\n// http://iquilezles.org/code/piLibsJS/piLibsJS.htm\nclass WebGL {\n  constructor(canvasId, res) {\n    this.canvas = document.getElementById(canvasId);\n    var opts = {\n      stencil: false,\n      premultipliedAlpha: false\n    };\n\n    var gl = null;\n    if (gl == null) gl = this.canvas.getContext(\"webgl2\", opts);\n    if (gl == null) gl = this.canvas.getContext(\"experimental-webgl2\", opts);\n    if (gl == null) gl = this.canvas.getContext(\"webgl\", opts);\n    if (gl == null) gl = this.canvas.getContext(\"experimental-webgl\", opts);\n    this.gl = gl;\n    this.textures = {};\n    let mIs20 = !(this.gl instanceof WebGLRenderingContext);\n\n    let vertexShader = \"\";\n\n    if (mIs20) {\n      vertexShader +=\n        \"#version 300 es\\n\" +\n        \"#ifdef GL_ES\\n\" +\n        \"precision highp float;\\n\" +\n        \"precision highp int;\\n\" +\n        \"precision mediump sampler3D;\\n\" +\n        \"#endif\\n\" +\n        \"in \";\n    } else {\n      vertexShader +=\n        \"#ifdef GL_ES\\n\" +\n        \"precision highp float;\\n\" +\n        \"precision highp int;\\n\" +\n        \"#endif\\n\" +\n        \"attribute\";\n    }\n    vertexShader +=\n      \" vec4 aPosition; void main() { gl_Position = aPosition; } \";\n    let fragmentShader = \"\";\n\n    let mDerivatives;\n    let mShaderTextureLOD;\n\n    if (mIs20) {\n      mDerivatives = true;\n      mShaderTextureLOD = true;\n    } else {\n      mDerivatives = this.gl.getExtension(\"OES_standard_derivatives\");\n      mShaderTextureLOD = this.gl.getExtension(\"EXT_shader_texture_lod\");\n    }\n\n    if (mIs20) {\n      fragmentShader +=\n        \"#version 300 es\\n\" +\n        \"#ifdef GL_ES\\n\" +\n        \"precision highp float;\\n\" +\n        \"precision highp int;\\n\" +\n        \"precision mediump sampler3D;\\n\" +\n        \"#endif\\n\" +\n        \"out vec4 myOutputColor;\\n\";\n      fragShader = fragShader.replace(\"gl_FragColor\", \"myOutputColor\");\n    } else {\n      if (mDerivatives) {\n        fragmentShader +=\n          \"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\";\n      }\n      if (mShaderTextureLOD) {\n        fragmentShader += \"#extension GL_EXT_shader_texture_lod : enable\\n\";\n      }\n      fragmentShader +=\n        \"#ifdef GL_ES\\n\" +\n        \"precision highp float;\\n\" +\n        \"precision highp int;\\n\" +\n        \"#endif\\n\" +\n        \"vec4 texture(     sampler2D   s, vec2 c)                   { return texture2D(s,c); }\\n\" +\n        \"vec4 texture(     sampler2D   s, vec2 c, float b)          { return texture2D(s,c,b); }\\n\" +\n        \"vec4 texture(     samplerCube s, vec3 c )                  { return textureCube(s,c); }\\n\" +\n        \"vec4 texture(     samplerCube s, vec3 c, float b)          { return textureCube(s,c,b); }\\n\" +\n        \"float round( float x ) { return floor(x+0.5); }\\n\" +\n        \"vec2 round(vec2 x) { return floor(x + 0.5); }\\n\" +\n        \"vec3 round(vec3 x) { return floor(x + 0.5); }\\n\" +\n        \"vec4 round(vec4 x) { return floor(x + 0.5); }\\n\" +\n        \"float trunc( float x, float n ) { return floor(x*n)/n; }\\n\" +\n        \"mat3 transpose(mat3 m) { return mat3(m[0].x, m[1].x, m[2].x, m[0].y, m[1].y, m[2].y, m[0].z, m[1].z, m[2].z); }\\n\" +\n        \"float determinant( in mat2 m ) { return m[0][0]*m[1][1] - m[0][1]*m[1][0]; }\\n\" +\n        \"float determinant( mat4 m ) { float b00 = m[0][0] * m[1][1] - m[0][1] * m[1][0], b01 = m[0][0] * m[1][2] - m[0][2] * m[1][0], b02 = m[0][0] * m[1][3] - m[0][3] * m[1][0], b03 = m[0][1] * m[1][2] - m[0][2] * m[1][1], b04 = m[0][1] * m[1][3] - m[0][3] * m[1][1], b05 = m[0][2] * m[1][3] - m[0][3] * m[1][2], b06 = m[2][0] * m[3][1] - m[2][1] * m[3][0], b07 = m[2][0] * m[3][2] - m[2][2] * m[3][0], b08 = m[2][0] * m[3][3] - m[2][3] * m[3][0], b09 = m[2][1] * m[3][2] - m[2][2] * m[3][1], b10 = m[2][1] * m[3][3] - m[2][3] * m[3][1], b11 = m[2][2] * m[3][3] - m[2][3] * m[3][2];  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;}\\n\" +\n        \"mat2 inverse(mat2 m) { float det = determinant(m); return mat2(m[1][1], -m[0][1], -m[1][0], m[0][0]) / det; }\\n\" +\n        \"mat4 inverse(mat4 m ) { float inv0 = m[1].y*m[2].z*m[3].w - m[1].y*m[2].w*m[3].z - m[2].y*m[1].z*m[3].w + m[2].y*m[1].w*m[3].z + m[3].y*m[1].z*m[2].w - m[3].y*m[1].w*m[2].z; float inv4 = -m[1].x*m[2].z*m[3].w + m[1].x*m[2].w*m[3].z + m[2].x*m[1].z*m[3].w - m[2].x*m[1].w*m[3].z - m[3].x*m[1].z*m[2].w + m[3].x*m[1].w*m[2].z; float inv8 = m[1].x*m[2].y*m[3].w - m[1].x*m[2].w*m[3].y - m[2].x  * m[1].y * m[3].w + m[2].x  * m[1].w * m[3].y + m[3].x * m[1].y * m[2].w - m[3].x * m[1].w * m[2].y; float inv12 = -m[1].x  * m[2].y * m[3].z + m[1].x  * m[2].z * m[3].y +m[2].x  * m[1].y * m[3].z - m[2].x  * m[1].z * m[3].y - m[3].x * m[1].y * m[2].z + m[3].x * m[1].z * m[2].y; float inv1 = -m[0].y*m[2].z * m[3].w + m[0].y*m[2].w * m[3].z + m[2].y  * m[0].z * m[3].w - m[2].y  * m[0].w * m[3].z - m[3].y * m[0].z * m[2].w + m[3].y * m[0].w * m[2].z; float inv5 = m[0].x  * m[2].z * m[3].w - m[0].x  * m[2].w * m[3].z - m[2].x  * m[0].z * m[3].w + m[2].x  * m[0].w * m[3].z + m[3].x * m[0].z * m[2].w - m[3].x * m[0].w * m[2].z; float inv9 = -m[0].x  * m[2].y * m[3].w +  m[0].x  * m[2].w * m[3].y + m[2].x  * m[0].y * m[3].w - m[2].x  * m[0].w * m[3].y - m[3].x * m[0].y * m[2].w + m[3].x * m[0].w * m[2].y; float inv13 = m[0].x  * m[2].y * m[3].z - m[0].x  * m[2].z * m[3].y - m[2].x  * m[0].y * m[3].z + m[2].x  * m[0].z * m[3].y + m[3].x * m[0].y * m[2].z - m[3].x * m[0].z * m[2].y; float inv2 = m[0].y  * m[1].z * m[3].w - m[0].y  * m[1].w * m[3].z - m[1].y  * m[0].z * m[3].w + m[1].y  * m[0].w * m[3].z + m[3].y * m[0].z * m[1].w - m[3].y * m[0].w * m[1].z; float inv6 = -m[0].x  * m[1].z * m[3].w + m[0].x  * m[1].w * m[3].z + m[1].x  * m[0].z * m[3].w - m[1].x  * m[0].w * m[3].z - m[3].x * m[0].z * m[1].w + m[3].x * m[0].w * m[1].z; float inv10 = m[0].x  * m[1].y * m[3].w - m[0].x  * m[1].w * m[3].y - m[1].x  * m[0].y * m[3].w + m[1].x  * m[0].w * m[3].y + m[3].x * m[0].y * m[1].w - m[3].x * m[0].w * m[1].y; float inv14 = -m[0].x  * m[1].y * m[3].z + m[0].x  * m[1].z * m[3].y + m[1].x  * m[0].y * m[3].z - m[1].x  * m[0].z * m[3].y - m[3].x * m[0].y * m[1].z + m[3].x * m[0].z * m[1].y; float inv3 = -m[0].y * m[1].z * m[2].w + m[0].y * m[1].w * m[2].z + m[1].y * m[0].z * m[2].w - m[1].y * m[0].w * m[2].z - m[2].y * m[0].z * m[1].w + m[2].y * m[0].w * m[1].z; float inv7 = m[0].x * m[1].z * m[2].w - m[0].x * m[1].w * m[2].z - m[1].x * m[0].z * m[2].w + m[1].x * m[0].w * m[2].z + m[2].x * m[0].z * m[1].w - m[2].x * m[0].w * m[1].z; float inv11 = -m[0].x * m[1].y * m[2].w + m[0].x * m[1].w * m[2].y + m[1].x * m[0].y * m[2].w - m[1].x * m[0].w * m[2].y - m[2].x * m[0].y * m[1].w + m[2].x * m[0].w * m[1].y; float inv15 = m[0].x * m[1].y * m[2].z - m[0].x * m[1].z * m[2].y - m[1].x * m[0].y * m[2].z + m[1].x * m[0].z * m[2].y + m[2].x * m[0].y * m[1].z - m[2].x * m[0].z * m[1].y; float det = m[0].x * inv0 + m[0].y * inv4 + m[0].z * inv8 + m[0].w * inv12; det = 1.0 / det; return det*mat4( inv0, inv1, inv2, inv3,inv4, inv5, inv6, inv7,inv8, inv9, inv10, inv11,inv12, inv13, inv14, inv15);}\\n\" +\n        \"float sinh(float x)  { return (exp(x)-exp(-x))/2.; }\\n\" +\n        \"float cosh(float x)  { return (exp(x)+exp(-x))/2.; }\\n\" +\n        \"float tanh(float x)  { return sinh(x)/cosh(x); }\\n\" +\n        \"float coth(float x)  { return cosh(x)/sinh(x); }\\n\" +\n        \"float sech(float x)  { return 1./cosh(x); }\\n\" +\n        \"float csch(float x)  { return 1./sinh(x); }\\n\" +\n        \"float asinh(float x) { return    log(x+sqrt(x*x+1.)); }\\n\" +\n        \"float acosh(float x) { return    log(x+sqrt(x*x-1.)); }\\n\" +\n        \"float atanh(float x) { return .5*log((1.+x)/(1.-x)); }\\n\" +\n        \"float acoth(float x) { return .5*log((x+1.)/(x-1.)); }\\n\" +\n        \"float asech(float x) { return    log((1.+sqrt(1.-x*x))/x); }\\n\" +\n        \"float acsch(float x) { return    log((1.+sqrt(1.+x*x))/x); }\\n\";\n      if (mShaderTextureLOD) {\n        fragmentShader +=\n          \"vec4 textureLod(  sampler2D   s, vec2 c, float b)          { return texture2DLodEXT(s,c,b); }\\n\";\n        fragmentShader +=\n          \"vec4 textureGrad( sampler2D   s, vec2 c, vec2 dx, vec2 dy) { return texture2DGradEXT(s,c,dx,dy); }\\n\";\n      } else {\n        fragShader = fragShader.replace(\"textureLod\", \"texture\");\n      }\n    }\n\n    fragmentShader += fragShader;\n    // console.log(fragmentShader);\n    this.shader = WebGL.linkShader(this.gl, vertexShader, fragmentShader);\n    this.shader.vertexAttribute = this.gl.getAttribLocation(\n      this.shader,\n      \"aPosition\"\n    );\n    this.gl.enableVertexAttribArray(this.shader.vertexAttribute);\n\n    this.height = window.innerHeight / res;\n    this.width = window.innerWidth / res;\n    this.canvas.setAttribute(\"width\", this.width);\n    this.canvas.setAttribute(\"height\", this.height);\n\n    this.vertexBuffer = WebGL.createVBO(this.gl, 3, [\n      1.0,\n      1.0,\n      0.0,\n      -1.0,\n      1.0,\n      0.0,\n      1.0,\n      -1.0,\n      0.0,\n      -1.0,\n      -1.0,\n      0.0\n    ]);\n    this.running = false;\n    this.time0 = 0.0;\n  }\n\n  loadTexture(channelNumber, source) {\n    var texture = this.gl.createTexture();\n    var gl = this.gl;\n    texture.image = new Image();\n    texture.image.onload = () => {\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n      try {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.RGBA,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          texture.image\n        );\n      } catch (err) {\n        console.log(`ERROR: Failed to load texture ${source} : ${err}`);\n\n        console.log(`INFO: Generating placeholder texture for ${source}`);\n        var w = 64,\n          bw = 4,\n          data = [];\n        for (var y = 0; y < w; y++) {\n          for (var x = 0; x < w; x++) {\n            var ix = parseInt(x / bw),\n              iy = parseInt(y / bw);\n            var c = 0xff * ((ix + iy) % 2);\n            data = data.concat([c, c, c, 0xff]);\n          }\n        }\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.RGBA,\n          w,\n          w,\n          0,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          new Uint8Array(data)\n        );\n      }\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n\n      this.textures[channelNumber] = texture;\n    };\n    texture.image.src = source;\n  }\n\n  start() {\n    if (this.running) {\n      return;\n    }\n\n    this._start();\n  }\n\n  _start() {\n    this.running = true;\n    this.time0 = WebGL.getTime();\n    this.timePreviousFrame = this.time0;\n\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.viewport(0, 0, this.width, this.height);\n    this.gl.useProgram(this.shader);\n  }\n\n  stop() {\n    this.running = false;\n  }\n\n  frame(gameTime) {\n    let gl = this.gl;\n    if (!this.running) {\n      return;\n    }\n\n    let shader = this.shader;\n    let time = WebGL.getTime() - this.time0;\n    let dt = time - this.timePreviousFrame;\n    this.timePreviousFrame = time;\n\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(\n      shader.vertexAttribute,\n      this.vertexBuffer.itemSize,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    // set texture\n    for (var channel in this.textures) {\n      var texture = this.textures[channel];\n      gl.activeTexture(gl.TEXTURE0 + parseInt(channel));\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.uniform1i(\n        gl.getUniformLocation(shader, \"iChannel\" + channel),\n        channel\n      );\n    }\n\n    // update uniforms\n    gl.uniform3f(\n      gl.getUniformLocation(shader, \"iResolution\"),\n      this.width,\n      this.height,\n      0\n    );\n    gl.uniform1f(gl.getUniformLocation(shader, \"iGlobalTime\"), time); // legacy support\n    gl.uniform1f(gl.getUniformLocation(shader, \"iTime\"), time);\n    gl.uniform1f(gl.getUniformLocation(shader, \"gameTime\"), gameTime);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, this.vertexBuffer.numItems);\n  }\n\n  static createVBO(gl, stride, vertexData) {\n    var vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(vertexData),\n      gl.STATIC_DRAW\n    );\n    vertexBuffer.itemSize = stride;\n    vertexBuffer.numItems = vertexData.length / stride;\n    return vertexBuffer;\n  }\n\n  static linkShader(gl, vertexSource, fragmentSource) {\n    var program = gl.createProgram();\n    gl.attachShader(\n      program,\n      WebGL.compileShader(gl, gl.VERTEX_SHADER, vertexSource)\n    );\n    gl.attachShader(\n      program,\n      WebGL.compileShader(gl, gl.FRAGMENT_SHADER, fragmentSource)\n    );\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      WebGL.showLogProgram(gl, program);\n      throw `Failed to link shader!`;\n    }\n\n    program.uniformLocation = (gl, name) =>\n      gl.getUniformLocation(program, name);\n\n    return program;\n  }\n\n  static compileShader(gl, shaderType, source) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      let type =\n        shaderType == gl.VERTEX_SHADER ? \"vertex shader\" : \"fragment shader\";\n      WebGL.showLog(gl, shader);\n      throw `Failed to compile ${type}`;\n    }\n    return shader;\n  }\n\n  static getTime() {\n    return 0.001 * new Date().getTime();\n  }\n  static showLog(gl, shader) {\n    var compilationLog = gl.getShaderInfoLog(shader);\n    console.log(\"ERROR: \" + compilationLog);\n  }\n  static showLogProgram(gl, program) {\n    var compilationLog = gl.getProgramInfoLog(program);\n    console.log(\"ERROR: \" + compilationLog);\n  }\n}\n\nfunction startSky(res) {\n  var webGL = new WebGL(\"sky-canvas\", res);\n  webGL.loadTexture(0, \"assets/noise.png\");\n\n  webGL.start();\n  return webGL;\n}\n\nexport { startSky };\n",{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"110","line":1,"column":28,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"106","severity":1,"message":"115","line":8,"column":13,"nodeType":"108","messageId":"109","endLine":8,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":130,"column":6,"nodeType":"118","endLine":130,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":156,"column":6,"nodeType":"118","endLine":156,"endColumn":12,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":160,"column":35,"nodeType":"124","messageId":"125","endLine":160,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":159,"column":22,"nodeType":"124","messageId":"125","endLine":159,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":168,"column":22,"nodeType":"124","messageId":"125","endLine":168,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":177,"column":22,"nodeType":"124","messageId":"125","endLine":177,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":186,"column":22,"nodeType":"124","messageId":"125","endLine":186,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":195,"column":22,"nodeType":"124","messageId":"125","endLine":195,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":204,"column":22,"nodeType":"124","messageId":"125","endLine":204,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":213,"column":22,"nodeType":"124","messageId":"125","endLine":213,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":222,"column":22,"nodeType":"124","messageId":"125","endLine":222,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":246,"column":22,"nodeType":"124","messageId":"125","endLine":246,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":255,"column":22,"nodeType":"124","messageId":"125","endLine":255,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":264,"column":22,"nodeType":"124","messageId":"125","endLine":264,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":273,"column":22,"nodeType":"124","messageId":"125","endLine":273,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":282,"column":22,"nodeType":"124","messageId":"125","endLine":282,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":291,"column":22,"nodeType":"124","messageId":"125","endLine":291,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":300,"column":22,"nodeType":"124","messageId":"125","endLine":300,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":309,"column":22,"nodeType":"124","messageId":"125","endLine":309,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":339,"column":22,"nodeType":"124","messageId":"125","endLine":339,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":346,"column":22,"nodeType":"124","messageId":"125","endLine":346,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":358,"column":22,"nodeType":"124","messageId":"125","endLine":358,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":368,"column":22,"nodeType":"124","messageId":"125","endLine":368,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":377,"column":22,"nodeType":"124","messageId":"125","endLine":377,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":386,"column":22,"nodeType":"124","messageId":"125","endLine":386,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":395,"column":22,"nodeType":"124","messageId":"125","endLine":395,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":407,"column":22,"nodeType":"124","messageId":"125","endLine":407,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":419,"column":22,"nodeType":"124","messageId":"125","endLine":419,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":427,"column":22,"nodeType":"124","messageId":"125","endLine":427,"endColumn":24},{"ruleId":"122","severity":1,"message":"126","line":480,"column":56,"nodeType":"124","messageId":"125","endLine":480,"endColumn":58},{"ruleId":"122","severity":1,"message":"123","line":522,"column":23,"nodeType":"124","messageId":"125","endLine":522,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":550,"column":19,"nodeType":"129","messageId":"130","endLine":550,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":559,"column":19,"nodeType":"129","messageId":"133","endLine":559,"endColumn":63},{"ruleId":"134","severity":2,"message":"135","line":567,"column":19,"nodeType":"108","messageId":"136","endLine":567,"endColumn":29},{"ruleId":"137","severity":2,"message":"138","line":571,"column":19,"nodeType":"108","messageId":"139","endLine":571,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":85,"column":22,"nodeType":"124","messageId":"125","endLine":85,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":94,"column":22,"nodeType":"124","messageId":"125","endLine":94,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":103,"column":22,"nodeType":"124","messageId":"125","endLine":103,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":112,"column":22,"nodeType":"124","messageId":"125","endLine":112,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":121,"column":22,"nodeType":"124","messageId":"125","endLine":121,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":130,"column":22,"nodeType":"124","messageId":"125","endLine":130,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":139,"column":22,"nodeType":"124","messageId":"125","endLine":139,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":148,"column":22,"nodeType":"124","messageId":"125","endLine":148,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":172,"column":22,"nodeType":"124","messageId":"125","endLine":172,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":181,"column":22,"nodeType":"124","messageId":"125","endLine":181,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":190,"column":22,"nodeType":"124","messageId":"125","endLine":190,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":199,"column":22,"nodeType":"124","messageId":"125","endLine":199,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":208,"column":22,"nodeType":"124","messageId":"125","endLine":208,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":217,"column":22,"nodeType":"124","messageId":"125","endLine":217,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":226,"column":22,"nodeType":"124","messageId":"125","endLine":226,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":235,"column":22,"nodeType":"124","messageId":"125","endLine":235,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":265,"column":22,"nodeType":"124","messageId":"125","endLine":265,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":272,"column":22,"nodeType":"124","messageId":"125","endLine":272,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":284,"column":22,"nodeType":"124","messageId":"125","endLine":284,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":294,"column":22,"nodeType":"124","messageId":"125","endLine":294,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":303,"column":22,"nodeType":"124","messageId":"125","endLine":303,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":312,"column":22,"nodeType":"124","messageId":"125","endLine":312,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":321,"column":22,"nodeType":"124","messageId":"125","endLine":321,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":333,"column":22,"nodeType":"124","messageId":"125","endLine":333,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":345,"column":22,"nodeType":"124","messageId":"125","endLine":345,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":353,"column":22,"nodeType":"124","messageId":"125","endLine":353,"endColumn":24},{"ruleId":"106","severity":1,"message":"140","line":6,"column":5,"nodeType":"108","messageId":"109","endLine":6,"endColumn":10},{"ruleId":"111","replacedBy":"141"},{"ruleId":"113","replacedBy":"142"},{"ruleId":"106","severity":1,"message":"143","line":233,"column":9,"nodeType":"108","messageId":"109","endLine":233,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":299,"column":7,"nodeType":"146","messageId":"147","endLine":299,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":315,"column":20,"nodeType":"124","messageId":"125","endLine":315,"endColumn":22},{"ruleId":"144","severity":1,"message":"145","line":317,"column":7,"nodeType":"146","messageId":"147","endLine":317,"endColumn":41},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["148"],"no-negated-in-lhs",["149"],"'Comlink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'canvas', 'memory', and 'universe'. Either include them or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has missing dependencies: 'canvas' and 'universe'. Either include them or remove the dependency array.",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-new-func","The Function constructor is eval.","noFunctionConstructor","no-undef","'globalThis' is not defined.","undef","no-restricted-globals","Unexpected use of 'self'.","defaultMessage","'index' is defined but never used.",["148"],["149"],"'dt' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [canvas, memory, universe]",{"range":"156","text":"157"},"Update the dependencies array to be: [canvas, type, universe]",{"range":"158","text":"159"},[3157,3159],"[canvas, memory, universe]",[4016,4022],"[canvas, type, universe]"]